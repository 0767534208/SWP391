{
  "openapi": "3.0.1",
  "info": {
    "title": "Demo API",
    "version": "v1"
  },
  "paths": {
    "/api/account/login": {
      "post": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/register-Customer": {
      "post": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCustomerRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCustomerRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCustomerRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCustomerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterCustomerResponseBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterCustomerResponseBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterCustomerResponseBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/confirmation/{email}/{code}": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/resetToken": {
      "post": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/create account": {
      "post": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponseBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponseBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponseBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/Update-Account-Status": {
      "put": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "userEmail",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountStatusDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountStatusDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountStatusDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/Reset-Password-Token": {
      "post": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetTokenModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetTokenModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetTokenModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetTokenModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/Reset-Password": {
      "post": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetToken"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetToken"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetToken"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetToken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResetPasswordResponseBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResetPasswordResponseBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResetPasswordResponseBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/Change-Password": {
      "post": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountChangePasswordResponseBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountChangePasswordResponseBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountChangePasswordResponseBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/appointment/GetAllAppointment": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllAppointmentIEnumerableBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllAppointmentIEnumerableBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllAppointmentIEnumerableBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/appointment/GetAppointmentByID/{appointmentId}": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllAppointmentBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllAppointmentBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllAppointmentBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/appointment/GetAppointmentByCode/{appointmentCode}": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "name": "appointmentCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllAppointmentBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllAppointmentBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllAppointmentBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/appointment/GetAppointmentByConsultantID/{accountId}": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllAppointmentIEnumerableBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllAppointmentIEnumerableBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllAppointmentIEnumerableBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/appointment/GetAppointmentByCustomerID/{accountId}": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllAppointmentIEnumerableBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllAppointmentIEnumerableBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllAppointmentIEnumerableBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/appointment/GetSlot": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SlotForCustomerIEnumerableBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlotForCustomerIEnumerableBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlotForCustomerIEnumerableBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/appointment/GetClinic/{clinicId}": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "name": "clinicId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/appointment/vnpay-return": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "name": "Vnp_Amount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Vnp_BankCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_BankTranNo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_CardType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_OrderInfo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_PayDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_ResponseCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_TmnCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_TransactionNo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_TransactionStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_TxnRef",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_SecureHash",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/appointment/vnpay-return-refunded": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "name": "Vnp_Amount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Vnp_BankCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_BankTranNo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_CardType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_OrderInfo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_PayDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_ResponseCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_TmnCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_TransactionNo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_TransactionStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_TxnRef",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Vnp_SecureHash",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/appointment/CreateAppointment": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32BaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32BaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/appointment/AppointmentPayment": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "name": "appointmentID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/appointment/AppointmentPayment-Refund-Full": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "name": "appointmentID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "accountId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refundType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/appointment/CreateClinic": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClinicRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClinicRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClinicRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClinicRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/appointment/UpdateClinic": {
      "put": {
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "name": "clinicID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClinicRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClinicRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClinicRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClinicRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/appointment/UpdateAppointment": {
      "put": {
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "name": "appointmentID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAppointmentRequestBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAppointmentRequestBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAppointmentRequestBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/appointment/UpdateAppointmentWithSTIRequest": {
      "put": {
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "name": "appointmentID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApppointmentRequestSTI"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApppointmentRequestSTI"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApppointmentRequestSTI"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApppointmentRequestSTI"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateApppointmentRequestSTIBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateApppointmentRequestSTIBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateApppointmentRequestSTIBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/appointment/ChangeAppointmentSlot": {
      "put": {
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "name": "appointmentID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentSlot"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentSlot"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentSlot"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentSlot"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAppointmentSlotBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAppointmentSlotBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAppointmentSlotBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/appointment/ChangeAppointmentStatus": {
      "put": {
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "name": "appointmentID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/AppointmentStatus"
            }
          },
          {
            "name": "paymentStatus",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PaymentStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/appointment/RescheduleAppointmentWithEmail": {
      "put": {
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "name": "appointmentID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentSlot"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentSlot"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentSlot"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentSlot"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAppointmentSlotBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAppointmentSlotBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAppointmentSlotBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/blog/GetAllBlog": {
      "get": {
        "tags": [
          "Blog"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BlogResponseIEnumerableBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogResponseIEnumerableBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogResponseIEnumerableBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/blog/GetBlogByID": {
      "get": {
        "tags": [
          "Blog"
        ],
        "parameters": [
          {
            "name": "blogID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BlogResponseBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogResponseBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogResponseBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/blog/CreateBlog": {
      "post": {
        "tags": [
          "Blog"
        ],
        "parameters": [
          {
            "name": "Title",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Author",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Images"
                ],
                "type": "object",
                "properties": {
                  "Images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "Images": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BlogBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/blog/UpdateBlog": {
      "put": {
        "tags": [
          "Blog"
        ],
        "parameters": [
          {
            "name": "blogID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBlogRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBlogRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBlogRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBlogRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BlogBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/category/GetCategory": {
      "get": {
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllCategoryResponseIEnumerableBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllCategoryResponseIEnumerableBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllCategoryResponseIEnumerableBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/category/CreateCategory": {
      "post": {
        "tags": [
          "Category"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCategoryRequestBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCategoryRequestBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCategoryRequestBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/category/UpdateCategory": {
      "put": {
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCategoryRequestBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCategoryRequestBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCategoryRequestBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Chat/messages/{conversationId}": {
      "get": {
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Chat/conversations/by-customer/{customerId}": {
      "get": {
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Chat/messages/by-customer-receiver": {
      "get": {
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receiverId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Chat/mark-as-read": {
      "put": {
        "tags": [
          "Chat"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkAsReadRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkAsReadRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkAsReadRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkAsReadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Chat/send-message": {
      "post": {
        "tags": [
          "Chat"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "ReceiverID",
                  "SenderID"
                ],
                "type": "object",
                "properties": {
                  "ReceiverID": {
                    "type": "string"
                  },
                  "SenderID": {
                    "type": "string"
                  },
                  "Content": {
                    "pattern": "^(?!\\\\s*$).+",
                    "type": "string"
                  },
                  "Images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "ReceiverID": {
                  "style": "form"
                },
                "SenderID": {
                  "style": "form"
                },
                "Content": {
                  "style": "form"
                },
                "Images": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Chat/create-conversation": {
      "post": {
        "tags": [
          "Chat"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConversationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConversationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConversationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConversationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/consultantSlot/GetAllConsultantSlot": {
      "get": {
        "tags": [
          "ConsultantSlot"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/consultantSlot/GetAllConsultantProfile": {
      "get": {
        "tags": [
          "ConsultantSlot"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllConsultantProfileIEnumerableBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllConsultantProfileIEnumerableBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllConsultantProfileIEnumerableBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/consultantSlot/GetConsultantProfileByAccountId/{accountId}": {
      "get": {
        "tags": [
          "ConsultantSlot"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsultantProfileResponseBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsultantProfileResponseBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsultantProfileResponseBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/consultantSlot/GetConsultantProfileById/{consultantProfileID}": {
      "get": {
        "tags": [
          "ConsultantSlot"
        ],
        "parameters": [
          {
            "name": "consultantProfileID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsultantProfileResponseBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsultantProfileResponseBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsultantProfileResponseBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/consultantSlot": {
      "get": {
        "tags": [
          "ConsultantSlot"
        ],
        "parameters": [
          {
            "name": "consultantId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/consultantSlot/search": {
      "get": {
        "tags": [
          "ConsultantSlot"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-05-10T00:00:00"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/consultantSlot/register": {
      "post": {
        "tags": [
          "ConsultantSlot"
        ],
        "parameters": [
          {
            "name": "slotId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxAppointment",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/consultantSlot/CreateConsultantProfile": {
      "post": {
        "tags": [
          "ConsultantSlot"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsultantProfile"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsultantProfile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsultantProfile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsultantProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreateConsultantProfileBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateConsultantProfileBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateConsultantProfileBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/consultantSlot/UpdateConsultantProfile": {
      "put": {
        "tags": [
          "ConsultantSlot"
        ],
        "parameters": [
          {
            "name": "consultantProfileID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConsultantProfile"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConsultantProfile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConsultantProfile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConsultantProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateConsultantProfileBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateConsultantProfileBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateConsultantProfileBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/consultantSlot/swap": {
      "put": {
        "tags": [
          "ConsultantSlot"
        ],
        "parameters": [
          {
            "name": "consultantA",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slotA",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "consultantB",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slotB",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CyclePrediction": {
      "get": {
        "tags": [
          "CyclePrediction"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "CyclePrediction"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCyclePredictionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCyclePredictionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCyclePredictionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCyclePredictionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "CyclePrediction"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCyclePredictionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCyclePredictionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCyclePredictionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCyclePredictionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CyclePrediction/{id}": {
      "get": {
        "tags": [
          "CyclePrediction"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "CyclePrediction"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CyclePrediction/menstrual-cycle/{menstrualCycleId}": {
      "get": {
        "tags": [
          "CyclePrediction"
        ],
        "parameters": [
          {
            "name": "menstrualCycleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CyclePrediction/customer/{customerId}": {
      "get": {
        "tags": [
          "CyclePrediction"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CyclePrediction/date-range": {
      "get": {
        "tags": [
          "CyclePrediction"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-05-10T00:00:00"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-05-10T00:00:00"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CyclePrediction/search": {
      "get": {
        "tags": [
          "CyclePrediction"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CyclePrediction/generate/{menstrualCycleId}": {
      "post": {
        "tags": [
          "CyclePrediction"
        ],
        "parameters": [
          {
            "name": "menstrualCycleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/dashboard/adminDashBoard/GetTotalAppointmentsTotalAppointmentsAmount": {
      "get": {
        "tags": [
          "DashBoard"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-05-10T00:00:00"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-05-10T00:00:00"
            }
          },
          {
            "name": "timeSpanType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetTotalAppointmentsTotalAppointmentsAmountListBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTotalAppointmentsTotalAppointmentsAmountListBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTotalAppointmentsTotalAppointmentsAmountListBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/adminDashBoard/GetCurrentWeekRevenue": {
      "get": {
        "tags": [
          "DashBoard"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentWeekRevenueListBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentWeekRevenueListBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentWeekRevenueListBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/adminDashBoard/GetTotalAppointmentsAndAmount": {
      "get": {
        "tags": [
          "DashBoard"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetTotalAppointmentsAndAmountBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTotalAppointmentsAndAmountBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTotalAppointmentsAndAmountBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/FeedBack": {
      "get": {
        "tags": [
          "FeedBack"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "FeedBack"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeedBackRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeedBackRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeedBackRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeedBackRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FeedBack/{id}": {
      "get": {
        "tags": [
          "FeedBack"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "FeedBack"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeedBackRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeedBackRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeedBackRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeedBackRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "FeedBack"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FeedBack/customer/{customerId}": {
      "get": {
        "tags": [
          "FeedBack"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FeedBack/appointment/{appointmentId}": {
      "get": {
        "tags": [
          "FeedBack"
        ],
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/health/hub": {
      "get": {
        "tags": [
          "GHSMSystem"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/LabTest": {
      "get": {
        "tags": [
          "LabTest"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "LabTest"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLabTestRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLabTestRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLabTestRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLabTestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "LabTest"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLabTestRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLabTestRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLabTestRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLabTestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/LabTest/{id}": {
      "get": {
        "tags": [
          "LabTest"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "LabTest"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/LabTest/customer/{customerId}": {
      "get": {
        "tags": [
          "LabTest"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/LabTest/staff/{staffId}": {
      "get": {
        "tags": [
          "LabTest"
        ],
        "parameters": [
          {
            "name": "staffId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/LabTest/treatment/{treatmentId}": {
      "get": {
        "tags": [
          "LabTest"
        ],
        "parameters": [
          {
            "name": "treatmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/LabTest/date-range": {
      "get": {
        "tags": [
          "LabTest"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-05-10T00:00:00"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-05-10T00:00:00"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/LabTest/search": {
      "get": {
        "tags": [
          "LabTest"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/LabTest/multiple": {
      "post": {
        "tags": [
          "LabTest"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMultipleLabTestsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMultipleLabTestsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMultipleLabTestsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMultipleLabTestsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/MenstrualCycle": {
      "get": {
        "tags": [
          "MenstrualCycle"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "MenstrualCycle"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMenstrualCycleRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMenstrualCycleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMenstrualCycleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMenstrualCycleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "MenstrualCycle"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMenstrualCycleRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMenstrualCycleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMenstrualCycleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMenstrualCycleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/MenstrualCycle/{id}": {
      "get": {
        "tags": [
          "MenstrualCycle"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "MenstrualCycle"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/MenstrualCycle/customer/{customerId}": {
      "get": {
        "tags": [
          "MenstrualCycle"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/MenstrualCycle/date-range": {
      "get": {
        "tags": [
          "MenstrualCycle"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-05-10T00:00:00"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-05-10T00:00:00"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/MenstrualCycle/search": {
      "get": {
        "tags": [
          "MenstrualCycle"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Question": {
      "post": {
        "tags": [
          "Question"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuestionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuestionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuestionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuestionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Question"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Question/{questionId}": {
      "get": {
        "tags": [
          "Question"
        ],
        "parameters": [
          {
            "name": "questionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Question/{questionId}/message": {
      "post": {
        "tags": [
          "Question"
        ],
        "parameters": [
          {
            "name": "questionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQnAMessageRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQnAMessageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQnAMessageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQnAMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Question/{questionId}/messages": {
      "get": {
        "tags": [
          "Question"
        ],
        "parameters": [
          {
            "name": "questionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Service/GetService": {
      "get": {
        "tags": [
          "Service"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesResponseIEnumerableBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesResponseIEnumerableBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesResponseIEnumerableBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Service/GetServiceStats": {
      "get": {
        "tags": [
          "Service"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetServiceStatsListBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetServiceStatsListBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetServiceStatsListBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Service/CreateService": {
      "post": {
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "ClinicID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CategoryID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ManagerID",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServicesName",
            "in": "query",
            "schema": {
              "maxLength": 1000,
              "type": "string"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "maxLength": 1000,
              "type": "string"
            }
          },
          {
            "name": "ServicesPrice",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "ServiceType",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ServiceType"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Images"
                ],
                "type": "object",
                "properties": {
                  "Images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "Images": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Service/UpdateService": {
      "put": {
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "serviceID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/slot/GetSlot": {
      "get": {
        "tags": [
          "Slot"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/slot/search": {
      "get": {
        "tags": [
          "Slot"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/slot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSlotRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSlotRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSlotRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSlotRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Slot"
        ],
        "parameters": [
          {
            "name": "slotId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSlotRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSlotRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSlotRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSlotRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/slot/{slotId}": {
      "delete": {
        "tags": [
          "Slot"
        ],
        "parameters": [
          {
            "name": "slotId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Transaction/GetAllTransactions": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseIEnumerableBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseIEnumerableBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseIEnumerableBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Transaction/GetAllTransactionByAppointmentId/{appointmentID}": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "appointmentID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseIEnumerableBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseIEnumerableBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseIEnumerableBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Transaction/GetTransactionByID/{transactionID}": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "transactionID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Transaction/GetTransactionByAppointmentId/{appointmentID}": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "appointmentID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Transaction/GetTransactionByAccountID/{accountId}": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseIEnumerableBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseIEnumerableBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseIEnumerableBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/TreatmentOutcome": {
      "get": {
        "tags": [
          "TreatmentOutcome"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "TreatmentOutcome"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTreatmentOutcomeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTreatmentOutcomeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTreatmentOutcomeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTreatmentOutcomeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "TreatmentOutcome"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTreatmentOutcomeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTreatmentOutcomeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTreatmentOutcomeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTreatmentOutcomeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/TreatmentOutcome/{id}": {
      "get": {
        "tags": [
          "TreatmentOutcome"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "TreatmentOutcome"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/TreatmentOutcome/customer/{customerId}": {
      "get": {
        "tags": [
          "TreatmentOutcome"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/TreatmentOutcome/consultant/{consultantId}": {
      "get": {
        "tags": [
          "TreatmentOutcome"
        ],
        "parameters": [
          {
            "name": "consultantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/TreatmentOutcome/appointment/{appointmentId}": {
      "get": {
        "tags": [
          "TreatmentOutcome"
        ],
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/TreatmentOutcome/search": {
      "get": {
        "tags": [
          "TreatmentOutcome"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/WorkingHour/GetWorkingHour": {
      "get": {
        "tags": [
          "WorkingHour"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingHourResponseIEnumerableBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingHourResponseIEnumerableBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingHourResponseIEnumerableBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/WorkingHour/CreateWorkingHour": {
      "post": {
        "tags": [
          "WorkingHour"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkingHourRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkingHourRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkingHourRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkingHourRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingHourBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingHourBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingHourBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/WorkingHour/UpdateWorkingHour": {
      "put": {
        "tags": [
          "WorkingHour"
        ],
        "parameters": [
          {
            "name": "workingHourID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkingHourRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkingHourRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkingHourRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkingHourRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingHourBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingHourBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingHourBaseResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "boolean"
          },
          "dateOfBirth": {
            "$ref": "#/components/schemas/DateOnly"
          },
          "consultantProfile": {
            "$ref": "#/components/schemas/ConsultantProfile"
          },
          "labTests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabTest"
            },
            "nullable": true
          },
          "customerAppointments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Appointment"
            },
            "nullable": true
          },
          "consultantAppointments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Appointment"
            },
            "nullable": true
          },
          "customerTreatmentOutcomes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TreatmentOutcome"
            },
            "nullable": true
          },
          "consultantTreatmentOutcomes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TreatmentOutcome"
            },
            "nullable": true
          },
          "consultantSlots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsultantSlot"
            },
            "nullable": true
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            },
            "nullable": true
          },
          "ratings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeedBack"
            },
            "nullable": true
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Services"
            },
            "nullable": true
          },
          "menstrualCycles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenstrualCycle"
            },
            "nullable": true
          },
          "qnACustomerMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QnAMessage"
            },
            "nullable": true
          },
          "qnAConsultantMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QnAMessage"
            },
            "nullable": true
          },
          "sentChatMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "nullable": true
          },
          "receivedChatMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "nullable": true
          },
          "conversationsAsUser1": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Conversation"
            },
            "nullable": true
          },
          "conversationsAsUser2": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Conversation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountChangePasswordResponse": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "confirmPassword": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountChangePasswordResponseBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/AccountChangePasswordResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountRequest": {
        "required": [
          "address",
          "dateOfBirth",
          "email",
          "name",
          "password",
          "phone",
          "role",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9]+$",
            "type": "string"
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "password": {
            "maxLength": 100,
            "minLength": 8,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).+$",
            "type": "string"
          },
          "address": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "phone": {
            "minLength": 1,
            "pattern": "^0[0-9]{9,10}$",
            "type": "string"
          },
          "role": {
            "minLength": 1,
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          }
        },
        "additionalProperties": false
      },
      "AccountResetPasswordResponse": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "confirmPassword": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountResetPasswordResponseBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/AccountResetPasswordResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountResponse": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "$ref": "#/components/schemas/DateOnly"
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountResponseBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/AccountResponse"
          }
        },
        "additionalProperties": false
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiResponseBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/ApiResponse"
          }
        },
        "additionalProperties": false
      },
      "Appointment": {
        "type": "object",
        "properties": {
          "appointmentID": {
            "type": "integer",
            "format": "int32"
          },
          "customerID": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Account"
          },
          "consultantID": {
            "type": "string",
            "nullable": true
          },
          "consultant": {
            "$ref": "#/components/schemas/Account"
          },
          "clinicID": {
            "type": "integer",
            "format": "int32"
          },
          "clinic": {
            "$ref": "#/components/schemas/Clinic"
          },
          "treatmentID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "treatmentOutcome": {
            "$ref": "#/components/schemas/TreatmentOutcome"
          },
          "slotID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "slot": {
            "$ref": "#/components/schemas/Slot"
          },
          "appointmentCode": {
            "type": "string",
            "nullable": true
          },
          "expiredTime": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "appointmentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-05-10T00:00:00"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "remainingBalance": {
            "type": "number",
            "format": "double"
          },
          "consultationFee": {
            "type": "number",
            "format": "double"
          },
          "stIsTestFee": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "$ref": "#/components/schemas/AppointmentStatus"
          },
          "paymentStatus": {
            "$ref": "#/components/schemas/PaymentStatus"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            },
            "nullable": true
          },
          "appointmentDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppointmentDetail"
            },
            "nullable": true
          },
          "feedBacks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeedBack"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppointmentBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/Appointment"
          }
        },
        "additionalProperties": false
      },
      "AppointmentDetail": {
        "type": "object",
        "properties": {
          "appointmentDetailID": {
            "type": "integer",
            "format": "int32"
          },
          "appointmentID": {
            "type": "integer",
            "format": "int32"
          },
          "appointment": {
            "$ref": "#/components/schemas/Appointment"
          },
          "servicesID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "service": {
            "$ref": "#/components/schemas/Services"
          },
          "consultantProfileID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "consultantProfile": {
            "$ref": "#/components/schemas/ConsultantProfile"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "servicePrice": {
            "type": "number",
            "format": "double"
          },
          "totalPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "AppointmentDetailRequest": {
        "type": "object",
        "properties": {
          "servicesID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "consultantProfileID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppointmentStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "format": "int32"
      },
      "Blog": {
        "required": [
          "author",
          "content",
          "title"
        ],
        "type": "object",
        "properties": {
          "blogID": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "content": {
            "minLength": 1,
            "type": "string"
          },
          "author": {
            "minLength": 1,
            "type": "string"
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "status": {
            "type": "boolean"
          },
          "imageBlogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageBlog"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BlogBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/Blog"
          }
        },
        "additionalProperties": false
      },
      "BlogResponse": {
        "type": "object",
        "properties": {
          "blogID": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "status": {
            "type": "boolean"
          },
          "imageBlogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageBlogResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BlogResponseBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/BlogResponse"
          }
        },
        "additionalProperties": false
      },
      "BlogResponseIEnumerableBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlogResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Category": {
        "type": "object",
        "properties": {
          "categoryID": {
            "type": "integer",
            "format": "int32"
          },
          "clinicID": {
            "type": "integer",
            "format": "int32"
          },
          "clinic": {
            "$ref": "#/components/schemas/Clinic"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "status": {
            "type": "boolean"
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Services"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangePasswordModel": {
        "required": [
          "confirmNewPassword",
          "currentPassword",
          "newPassword",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "minLength": 1,
            "type": "string"
          },
          "currentPassword": {
            "minLength": 1,
            "type": "string"
          },
          "newPassword": {
            "minLength": 1,
            "type": "string"
          },
          "confirmNewPassword": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Clinic": {
        "type": "object",
        "properties": {
          "clinicID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "status": {
            "$ref": "#/components/schemas/ClinicStatus"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "workingHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkingHour"
            },
            "nullable": true
          },
          "slots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Slot"
            },
            "nullable": true
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Services"
            },
            "nullable": true
          },
          "appointments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Appointment"
            },
            "nullable": true
          },
          "blogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Blog"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClinicBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/Clinic"
          }
        },
        "additionalProperties": false
      },
      "ClinicResponse": {
        "type": "object",
        "properties": {
          "clinicID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "status": {
            "$ref": "#/components/schemas/ClinicStatus"
          }
        },
        "additionalProperties": false
      },
      "ClinicStatus": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ConsultantProfile": {
        "type": "object",
        "properties": {
          "consultantProfileID": {
            "type": "integer",
            "format": "int32"
          },
          "accountID": {
            "type": "string",
            "nullable": true
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "specialty": {
            "type": "string",
            "nullable": true
          },
          "experience": {
            "type": "string",
            "nullable": true
          },
          "consultantPrice": {
            "type": "number",
            "format": "double"
          },
          "appointmentDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppointmentDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConsultantSlot": {
        "type": "object",
        "properties": {
          "consultantID": {
            "type": "string",
            "nullable": true
          },
          "consultant": {
            "$ref": "#/components/schemas/Account"
          },
          "slotID": {
            "type": "integer",
            "format": "int32"
          },
          "slot": {
            "$ref": "#/components/schemas/Slot"
          },
          "maxAppointment": {
            "type": "integer",
            "format": "int32"
          },
          "assignedDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          }
        },
        "additionalProperties": false
      },
      "Conversation": {
        "required": [
          "user1ID",
          "user2ID"
        ],
        "type": "object",
        "properties": {
          "conversationID": {
            "type": "integer",
            "format": "int32"
          },
          "user1ID": {
            "minLength": 1,
            "type": "string"
          },
          "user2ID": {
            "minLength": 1,
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "lastMessageAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "user1": {
            "$ref": "#/components/schemas/Account"
          },
          "user2": {
            "$ref": "#/components/schemas/Account"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAppointmentRequest": {
        "required": [
          "appointmentDate",
          "clinicID",
          "customerID"
        ],
        "type": "object",
        "properties": {
          "customerID": {
            "minLength": 1,
            "type": "string"
          },
          "consultantID": {
            "type": "string",
            "nullable": true
          },
          "clinicID": {
            "type": "integer",
            "format": "int32"
          },
          "slotID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appointmentDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "appointmentDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppointmentDetailRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCategoryRequest": {
        "type": "object",
        "properties": {
          "clinicID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCategoryRequestBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/CreateCategoryRequest"
          }
        },
        "additionalProperties": false
      },
      "CreateClinicRequest": {
        "required": [
          "address",
          "email",
          "name",
          "phone",
          "status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "address": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string"
          },
          "phone": {
            "minLength": 1,
            "type": "string",
            "format": "tel"
          },
          "status": {
            "$ref": "#/components/schemas/ClinicStatus"
          }
        },
        "additionalProperties": false
      },
      "CreateConsultantProfile": {
        "required": [
          "accountID"
        ],
        "type": "object",
        "properties": {
          "accountID": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "specialty": {
            "type": "string",
            "nullable": true
          },
          "experience": {
            "type": "string",
            "nullable": true
          },
          "consultantPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CreateConsultantProfileBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/CreateConsultantProfile"
          }
        },
        "additionalProperties": false
      },
      "CreateConversationRequest": {
        "required": [
          "receiverID",
          "senderID"
        ],
        "type": "object",
        "properties": {
          "receiverID": {
            "minLength": 1,
            "type": "string"
          },
          "senderID": {
            "minLength": 1,
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          }
        },
        "additionalProperties": false
      },
      "CreateCyclePredictionRequest": {
        "required": [
          "fertileEndDate",
          "fertileStartDate",
          "menstrualCycleID",
          "nextPeriodStartDate",
          "ovulationDate"
        ],
        "type": "object",
        "properties": {
          "menstrualCycleID": {
            "type": "integer",
            "format": "int32"
          },
          "ovulationDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "fertileStartDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "fertileEndDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "nextPeriodStartDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          }
        },
        "additionalProperties": false
      },
      "CreateFeedBackRequest": {
        "required": [
          "appointmentID",
          "customerID",
          "facilityRate",
          "serviceRate"
        ],
        "type": "object",
        "properties": {
          "customerID": {
            "minLength": 1,
            "type": "string"
          },
          "appointmentID": {
            "type": "integer",
            "format": "int32"
          },
          "serviceRate": {
            "maximum": 5,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "facilityRate": {
            "maximum": 5,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "content": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateLabTestRequest": {
        "required": [
          "customerID",
          "result",
          "staffID",
          "testDate",
          "testName"
        ],
        "type": "object",
        "properties": {
          "customerID": {
            "minLength": 1,
            "type": "string"
          },
          "staffID": {
            "minLength": 1,
            "type": "string"
          },
          "treatmentID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "testName": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "result": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "referenceRange": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "unit": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isPositive": {
            "type": "boolean",
            "nullable": true
          },
          "testDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          }
        },
        "additionalProperties": false
      },
      "CreateMenstrualCycleRequest": {
        "required": [
          "customerID",
          "cycleLength",
          "periodLength",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "customerID": {
            "minLength": 1,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "periodLength": {
            "maximum": 15,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "cycleLength": {
            "maximum": 45,
            "minimum": 15,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateMultipleLabTestsRequest": {
        "type": "object",
        "properties": {
          "labTests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateLabTestRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateQnAMessageRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          },
          "parentMessageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateQuestionRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateSlotRequest": {
        "type": "object",
        "properties": {
          "clinicID": {
            "type": "integer",
            "format": "int32"
          },
          "workingHourID": {
            "type": "integer",
            "format": "int32"
          },
          "maxConsultant": {
            "type": "integer",
            "format": "int32"
          },
          "maxTestAppointment": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          }
        },
        "additionalProperties": false
      },
      "CreateTreatmentOutcomeRequest": {
        "required": [
          "consultantID",
          "customerID",
          "diagnosis",
          "treatmentPlan"
        ],
        "type": "object",
        "properties": {
          "customerID": {
            "minLength": 1,
            "type": "string"
          },
          "consultantID": {
            "minLength": 1,
            "type": "string"
          },
          "appointmentID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "diagnosis": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "treatmentPlan": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string"
          },
          "prescription": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "recommendation": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateWorkingHourRequest": {
        "required": [
          "clinicID",
          "closingTime",
          "dayInWeek",
          "openingTime",
          "shift"
        ],
        "type": "object",
        "properties": {
          "clinicID": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "dayInWeek": {
            "$ref": "#/components/schemas/DayInWeek"
          },
          "shift": {
            "$ref": "#/components/schemas/Shift"
          },
          "openingTime": {
            "minLength": 1,
            "pattern": "^\\d{2}:\\d{2}$",
            "type": "string"
          },
          "closingTime": {
            "minLength": 1,
            "pattern": "^\\d{2}:\\d{2}$",
            "type": "string"
          },
          "status": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CyclePrediction": {
        "type": "object",
        "properties": {
          "cyclePredictionID": {
            "type": "integer",
            "format": "int32"
          },
          "menstrualCycleID": {
            "type": "integer",
            "format": "int32"
          },
          "menstrualCycle": {
            "$ref": "#/components/schemas/MenstrualCycle"
          },
          "ovulationDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "fertileStartDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "fertileEndDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "nextPeriodStartDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          }
        },
        "additionalProperties": false
      },
      "DateOnly": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "dayOfYear": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "dayNumber": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DayInWeek": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "DayOfWeek": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "FeedBack": {
        "type": "object",
        "properties": {
          "feedBackID": {
            "type": "integer",
            "format": "int32"
          },
          "customerID": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Account"
          },
          "appointmentID": {
            "type": "integer",
            "format": "int32"
          },
          "appointment": {
            "$ref": "#/components/schemas/Appointment"
          },
          "sumRate": {
            "type": "number",
            "format": "double"
          },
          "serviceRate": {
            "type": "number",
            "format": "double"
          },
          "facilityRate": {
            "type": "number",
            "format": "double"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          }
        },
        "additionalProperties": false
      },
      "GetAccount": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "$ref": "#/components/schemas/DateOnly"
          }
        },
        "additionalProperties": false
      },
      "GetAllAppointment": {
        "type": "object",
        "properties": {
          "appointmentID": {
            "type": "integer",
            "format": "int32"
          },
          "customerID": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/GetCustomerUser"
          },
          "consultantID": {
            "type": "string",
            "nullable": true
          },
          "consultant": {
            "$ref": "#/components/schemas/GetConsultantUser"
          },
          "treatmentID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "treatmentOutcome": {
            "$ref": "#/components/schemas/GetTreatmentOutcomeResponse"
          },
          "slotID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "slot": {
            "$ref": "#/components/schemas/GetSlotResponse"
          },
          "appointmentCode": {
            "type": "string",
            "nullable": true
          },
          "expiredTime": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "appointmentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-05-10T00:00:00"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "remainingBalance": {
            "type": "number",
            "format": "double"
          },
          "consultationFee": {
            "type": "number",
            "format": "double"
          },
          "stIsTestFee": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "$ref": "#/components/schemas/AppointmentStatus"
          },
          "paymentStatus": {
            "$ref": "#/components/schemas/PaymentStatus"
          },
          "appointmentDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAppointmentDetailResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllAppointmentBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/GetAllAppointment"
          }
        },
        "additionalProperties": false
      },
      "GetAllAppointmentIEnumerableBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllAppointment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllCategoryResponse": {
        "type": "object",
        "properties": {
          "categoryID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "status": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetAllCategoryResponseIEnumerableBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllCategoryResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllConsultantProfile": {
        "type": "object",
        "properties": {
          "consultantProfileID": {
            "type": "integer",
            "format": "int32"
          },
          "account": {
            "$ref": "#/components/schemas/GetConsultantUserForProfile"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "specialty": {
            "type": "string",
            "nullable": true
          },
          "experience": {
            "type": "string",
            "nullable": true
          },
          "consultantPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GetAllConsultantProfileIEnumerableBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllConsultantProfile"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAppointmentDetailResponse": {
        "type": "object",
        "properties": {
          "appointmentDetailID": {
            "type": "integer",
            "format": "int32"
          },
          "servicesID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "service": {
            "$ref": "#/components/schemas/GetServiceResponse"
          },
          "consultantProfileID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "consultantProfile": {
            "$ref": "#/components/schemas/GetConsultantProfileResponse"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "servicePrice": {
            "type": "number",
            "format": "double"
          },
          "totalPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GetAppointmentForTransaction": {
        "type": "object",
        "properties": {
          "appointmentID": {
            "type": "integer",
            "format": "int32"
          },
          "customerID": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/GetCustomerUser"
          },
          "consultantID": {
            "type": "string",
            "nullable": true
          },
          "consultant": {
            "$ref": "#/components/schemas/GetConsultantUser"
          },
          "clinicID": {
            "type": "integer",
            "format": "int32"
          },
          "clinic": {
            "$ref": "#/components/schemas/ClinicResponse"
          },
          "treatmentID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "treatmentOutcome": {
            "$ref": "#/components/schemas/GetTreatmentOutcomeResponse"
          },
          "slotID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "slot": {
            "$ref": "#/components/schemas/GetSlotResponse"
          },
          "appointmentCode": {
            "type": "string",
            "nullable": true
          },
          "expiredTime": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "appointmentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-05-10T00:00:00"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "remainingBalance": {
            "type": "number",
            "format": "double"
          },
          "consultationFee": {
            "type": "number",
            "format": "double"
          },
          "stIsTestFee": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "$ref": "#/components/schemas/AppointmentStatus"
          },
          "paymentStatus": {
            "$ref": "#/components/schemas/PaymentStatus"
          }
        },
        "additionalProperties": false
      },
      "GetCategoryForService": {
        "type": "object",
        "properties": {
          "categoryID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetConsultantProfileResponse": {
        "type": "object",
        "properties": {
          "consultantProfileID": {
            "type": "integer",
            "format": "int32"
          },
          "account": {
            "$ref": "#/components/schemas/GetConsultantUserForProfile"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "specialty": {
            "type": "string",
            "nullable": true
          },
          "experience": {
            "type": "string",
            "nullable": true
          },
          "consultantPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GetConsultantProfileResponseBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/GetConsultantProfileResponse"
          }
        },
        "additionalProperties": false
      },
      "GetConsultantSlotForProfile": {
        "type": "object",
        "properties": {
          "slotID": {
            "type": "integer",
            "format": "int32"
          },
          "slot": {
            "$ref": "#/components/schemas/GetSlotResponseForProfile"
          },
          "maxAppointment": {
            "type": "integer",
            "format": "int32"
          },
          "assignedDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          }
        },
        "additionalProperties": false
      },
      "GetConsultantUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "boolean"
          },
          "dateOfBirth": {
            "$ref": "#/components/schemas/DateOnly"
          }
        },
        "additionalProperties": false
      },
      "GetConsultantUserForProfile": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "boolean"
          },
          "dateOfBirth": {
            "$ref": "#/components/schemas/DateOnly"
          },
          "consultantSlots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetConsultantSlotForProfile"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetCurrentWeekRevenue": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "nullable": true
          },
          "totalAppointmentsAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GetCurrentWeekRevenueListBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetCurrentWeekRevenue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetCustomerUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "boolean"
          },
          "dateOfBirth": {
            "$ref": "#/components/schemas/DateOnly"
          }
        },
        "additionalProperties": false
      },
      "GetServiceResponse": {
        "type": "object",
        "properties": {
          "servicesID": {
            "type": "integer",
            "format": "int32"
          },
          "servicesName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "servicesPrice": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "boolean"
          },
          "serviceType": {
            "$ref": "#/components/schemas/ServiceType"
          }
        },
        "additionalProperties": false
      },
      "GetServiceStats": {
        "type": "object",
        "properties": {
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetServiceStatsListBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetServiceStats"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSlotResponse": {
        "type": "object",
        "properties": {
          "slotID": {
            "type": "integer",
            "format": "int32"
          },
          "maxConsultant": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          }
        },
        "additionalProperties": false
      },
      "GetSlotResponseForProfile": {
        "type": "object",
        "properties": {
          "slotID": {
            "type": "integer",
            "format": "int32"
          },
          "maxConsultant": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          }
        },
        "additionalProperties": false
      },
      "GetTotalAppointmentsAndAmount": {
        "type": "object",
        "properties": {
          "totalAppointments": {
            "type": "integer",
            "format": "int32"
          },
          "totalAppointmentsAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GetTotalAppointmentsAndAmountBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/GetTotalAppointmentsAndAmount"
          }
        },
        "additionalProperties": false
      },
      "GetTotalAppointmentsTotalAppointmentsAmount": {
        "type": "object",
        "properties": {
          "span": {
            "nullable": true
          },
          "totalAppointments": {
            "type": "integer",
            "format": "int32"
          },
          "totalAppointmentsAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GetTotalAppointmentsTotalAppointmentsAmountListBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetTotalAppointmentsTotalAppointmentsAmount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetTreatmentOutcomeResponse": {
        "type": "object",
        "properties": {
          "treatmentID": {
            "type": "integer",
            "format": "int32"
          },
          "customerID": {
            "type": "string",
            "nullable": true
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "customerEmail": {
            "type": "string",
            "nullable": true
          },
          "customerPhone": {
            "type": "string",
            "nullable": true
          },
          "consultantID": {
            "type": "string",
            "nullable": true
          },
          "consultantName": {
            "type": "string",
            "nullable": true
          },
          "consultantEmail": {
            "type": "string",
            "nullable": true
          },
          "appointmentID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "diagnosis": {
            "type": "string",
            "nullable": true
          },
          "treatmentPlan": {
            "type": "string",
            "nullable": true
          },
          "prescription": {
            "type": "string",
            "nullable": true
          },
          "recommendation": {
            "type": "string",
            "nullable": true
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          }
        },
        "additionalProperties": false
      },
      "ImageBlog": {
        "required": [
          "image"
        ],
        "type": "object",
        "properties": {
          "imageBlogID": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "minLength": 1,
            "type": "string"
          },
          "blogID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "blog": {
            "$ref": "#/components/schemas/Blog"
          }
        },
        "additionalProperties": false
      },
      "ImageBlogResponse": {
        "type": "object",
        "properties": {
          "imageBlogID": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageService": {
        "required": [
          "image"
        ],
        "type": "object",
        "properties": {
          "imageServiceID": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "minLength": 1,
            "type": "string"
          },
          "servicesID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "service": {
            "$ref": "#/components/schemas/Services"
          }
        },
        "additionalProperties": false
      },
      "ImageServiceResponse": {
        "type": "object",
        "properties": {
          "imageServiceID": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Int32BaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LabTest": {
        "type": "object",
        "properties": {
          "labTestID": {
            "type": "integer",
            "format": "int32"
          },
          "customerID": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Account"
          },
          "staffID": {
            "type": "string",
            "nullable": true
          },
          "staff": {
            "$ref": "#/components/schemas/Account"
          },
          "treatmentID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "treatmentOutcome": {
            "$ref": "#/components/schemas/TreatmentOutcome"
          },
          "testName": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "type": "string",
            "nullable": true
          },
          "referenceRange": {
            "type": "string",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "isPositive": {
            "type": "boolean",
            "nullable": true
          },
          "testDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          }
        },
        "additionalProperties": false
      },
      "LoginRequest": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "$ref": "#/components/schemas/DateOnly"
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginResponseBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/LoginResponse"
          }
        },
        "additionalProperties": false
      },
      "MarkAsReadRequest": {
        "required": [
          "conversationId",
          "senderId"
        ],
        "type": "object",
        "properties": {
          "conversationId": {
            "type": "integer",
            "format": "int32"
          },
          "senderId": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MenstrualCycle": {
        "type": "object",
        "properties": {
          "menstrualCycleID": {
            "type": "integer",
            "format": "int32"
          },
          "customerID": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Account"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "periodLength": {
            "type": "integer",
            "format": "int32"
          },
          "cycleLength": {
            "type": "integer",
            "format": "int32"
          },
          "prediction": {
            "$ref": "#/components/schemas/CyclePrediction"
          }
        },
        "additionalProperties": false
      },
      "Message": {
        "required": [
          "receiverID",
          "senderID"
        ],
        "type": "object",
        "properties": {
          "messageID": {
            "type": "integer",
            "format": "int32"
          },
          "conversationID": {
            "type": "integer",
            "format": "int32"
          },
          "senderID": {
            "minLength": 1,
            "type": "string"
          },
          "receiverID": {
            "minLength": 1,
            "type": "string"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "senderName": {
            "type": "string",
            "nullable": true
          },
          "receiverName": {
            "type": "string",
            "nullable": true
          },
          "sentAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "isRead": {
            "type": "boolean"
          },
          "conversation": {
            "$ref": "#/components/schemas/Conversation"
          },
          "sender": {
            "$ref": "#/components/schemas/Account"
          },
          "receiver": {
            "$ref": "#/components/schemas/Account"
          }
        },
        "additionalProperties": false
      },
      "PaymentStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "QnAMessage": {
        "type": "object",
        "properties": {
          "messageID": {
            "type": "integer",
            "format": "int32"
          },
          "questionID": {
            "type": "integer",
            "format": "int32"
          },
          "customerID": {
            "type": "string",
            "nullable": true
          },
          "consultantID": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "parentMessageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Account"
          },
          "consultant": {
            "$ref": "#/components/schemas/Account"
          },
          "question": {
            "$ref": "#/components/schemas/Question"
          },
          "parentMessage": {
            "$ref": "#/components/schemas/QnAMessage"
          },
          "replies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QnAMessage"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Question": {
        "type": "object",
        "properties": {
          "questionID": {
            "type": "integer",
            "format": "int32"
          },
          "customerID": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Account"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QnAMessage"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterCustomerRequest": {
        "required": [
          "address",
          "dateOfBirth",
          "email",
          "name",
          "password",
          "phone",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9]+$",
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "address": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "phone": {
            "minLength": 1,
            "pattern": "^0[0-9]{9,10}$",
            "type": "string"
          },
          "password": {
            "maxLength": 100,
            "minLength": 8,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).+$",
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          }
        },
        "additionalProperties": false
      },
      "RegisterCustomerResponse": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "$ref": "#/components/schemas/DateOnly"
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterCustomerResponseBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/RegisterCustomerResponse"
          }
        },
        "additionalProperties": false
      },
      "ResetToken": {
        "required": [
          "confirmPassword",
          "email",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "confirmPassword": {
            "minLength": 1,
            "type": "string"
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetTokenModel": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Services": {
        "required": [
          "description",
          "servicesName",
          "servicesPrice"
        ],
        "type": "object",
        "properties": {
          "servicesID": {
            "type": "integer",
            "format": "int32"
          },
          "clinicID": {
            "type": "integer",
            "format": "int32"
          },
          "clinic": {
            "$ref": "#/components/schemas/Clinic"
          },
          "categoryID": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "managerID": {
            "type": "string",
            "nullable": true
          },
          "manager": {
            "$ref": "#/components/schemas/Account"
          },
          "servicesName": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "servicesPrice": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "boolean"
          },
          "serviceType": {
            "$ref": "#/components/schemas/ServiceType"
          },
          "appointmentDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppointmentDetail"
            },
            "nullable": true
          },
          "imageServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageService"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServicesBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/Services"
          }
        },
        "additionalProperties": false
      },
      "ServicesResponse": {
        "type": "object",
        "properties": {
          "servicesID": {
            "type": "integer",
            "format": "int32"
          },
          "categoryID": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "$ref": "#/components/schemas/GetCategoryForService"
          },
          "servicesName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "servicesPrice": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "boolean"
          },
          "serviceType": {
            "$ref": "#/components/schemas/ServiceType"
          },
          "imageServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageServiceResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServicesResponseIEnumerableBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServicesResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Shift": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Slot": {
        "type": "object",
        "properties": {
          "slotID": {
            "type": "integer",
            "format": "int32"
          },
          "clinicID": {
            "type": "integer",
            "format": "int32"
          },
          "clinic": {
            "$ref": "#/components/schemas/Clinic"
          },
          "workingHourID": {
            "type": "integer",
            "format": "int32"
          },
          "workingHour": {
            "$ref": "#/components/schemas/WorkingHour"
          },
          "maxConsultant": {
            "type": "integer",
            "format": "int32"
          },
          "maxTestAppointment": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "appointments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Appointment"
            },
            "nullable": true
          },
          "consultantSlots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsultantSlot"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SlotForCustomer": {
        "type": "object",
        "properties": {
          "slotID": {
            "type": "integer",
            "format": "int32"
          },
          "maxConsultant": {
            "type": "integer",
            "format": "int32"
          },
          "maxTestAppointment": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          }
        },
        "additionalProperties": false
      },
      "SlotForCustomerIEnumerableBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SlotForCustomer"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatusCodeEnum": {
        "enum": [
          100,
          101,
          102,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          226,
          300,
          301,
          302,
          303,
          304,
          305,
          307,
          308,
          400,
          401,
          402,
          403,
          404,
          405,
          406,
          407,
          408,
          409,
          410,
          411,
          412,
          413,
          414,
          415,
          416,
          417,
          418,
          421,
          422,
          423,
          424,
          425,
          426,
          428,
          429,
          431,
          451,
          500,
          501,
          502,
          503,
          504,
          505,
          506,
          507,
          508,
          510,
          511
        ],
        "type": "integer",
        "format": "int32"
      },
      "StatusOfTransaction": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "StringBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeOnly": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "millisecond": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "microsecond": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "nanosecond": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "ticks": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TokenModel": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "responseId": {
            "type": "string",
            "nullable": true
          },
          "appointment": {
            "$ref": "#/components/schemas/Appointment"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "tmnCode": {
            "type": "string",
            "nullable": true
          },
          "txnRef": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "orderInfo": {
            "type": "string",
            "nullable": true
          },
          "responseCode": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "bankTranNo": {
            "type": "string",
            "nullable": true
          },
          "payDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "finishDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-05-10T00:00:00"
          },
          "bankCode": {
            "type": "string",
            "nullable": true
          },
          "transactionNo": {
            "type": "string",
            "nullable": true
          },
          "transactionType": {
            "type": "string",
            "nullable": true
          },
          "transactionStatus": {
            "type": "string",
            "nullable": true
          },
          "secureHash": {
            "type": "string",
            "nullable": true
          },
          "transactionKind": {
            "$ref": "#/components/schemas/TransactionKind"
          },
          "statusTransaction": {
            "$ref": "#/components/schemas/StatusOfTransaction"
          }
        },
        "additionalProperties": false
      },
      "TransactionKind": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "TransactionResponse": {
        "type": "object",
        "properties": {
          "responseId": {
            "type": "string",
            "nullable": true
          },
          "appointment": {
            "$ref": "#/components/schemas/GetAppointmentForTransaction"
          },
          "account": {
            "$ref": "#/components/schemas/GetAccount"
          },
          "tmnCode": {
            "type": "string",
            "nullable": true
          },
          "txnRef": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "orderInfo": {
            "type": "string",
            "nullable": true
          },
          "responseCode": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "bankTranNo": {
            "type": "string",
            "nullable": true
          },
          "payDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "finishDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-05-10T00:00:00"
          },
          "bankCode": {
            "type": "string",
            "nullable": true
          },
          "transactionNo": {
            "type": "string",
            "nullable": true
          },
          "transactionType": {
            "type": "string",
            "nullable": true
          },
          "transactionStatus": {
            "type": "string",
            "nullable": true
          },
          "secureHash": {
            "type": "string",
            "nullable": true
          },
          "transactionKind": {
            "$ref": "#/components/schemas/TransactionKind"
          },
          "statusTransaction": {
            "$ref": "#/components/schemas/StatusOfTransaction"
          }
        },
        "additionalProperties": false
      },
      "TransactionResponseBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/TransactionResponse"
          }
        },
        "additionalProperties": false
      },
      "TransactionResponseIEnumerableBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TreatmentOutcome": {
        "type": "object",
        "properties": {
          "treatmentID": {
            "type": "integer",
            "format": "int32"
          },
          "customerID": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Account"
          },
          "consultantID": {
            "type": "string",
            "nullable": true
          },
          "consultant": {
            "$ref": "#/components/schemas/Account"
          },
          "appointmentID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appointment": {
            "$ref": "#/components/schemas/Appointment"
          },
          "diagnosis": {
            "type": "string",
            "nullable": true
          },
          "treatmentPlan": {
            "type": "string",
            "nullable": true
          },
          "prescription": {
            "type": "string",
            "nullable": true
          },
          "recommendation": {
            "type": "string",
            "nullable": true
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "labTests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabTest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAccountStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateAppointmentDetailRequest": {
        "type": "object",
        "properties": {
          "appointmentDetailID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "servicesID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "consultantProfileID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateAppointmentDetailSTI": {
        "type": "object",
        "properties": {
          "servicesID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateAppointmentRequest": {
        "required": [
          "appointmentDate"
        ],
        "type": "object",
        "properties": {
          "consultantID": {
            "type": "string",
            "nullable": true
          },
          "slotID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appointmentDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "appointmentDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateAppointmentDetailRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAppointmentRequestBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/UpdateAppointmentRequest"
          }
        },
        "additionalProperties": false
      },
      "UpdateAppointmentSlot": {
        "required": [
          "appointmentDate"
        ],
        "type": "object",
        "properties": {
          "slotID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appointmentDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          }
        },
        "additionalProperties": false
      },
      "UpdateAppointmentSlotBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/UpdateAppointmentSlot"
          }
        },
        "additionalProperties": false
      },
      "UpdateApppointmentRequestSTI": {
        "type": "object",
        "properties": {
          "appointmentDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateAppointmentDetailSTI"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateApppointmentRequestSTIBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/UpdateApppointmentRequestSTI"
          }
        },
        "additionalProperties": false
      },
      "UpdateBlogRequest": {
        "required": [
          "author",
          "content",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "content": {
            "minLength": 1,
            "type": "string"
          },
          "author": {
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateCategoryRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateCategoryRequestBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/UpdateCategoryRequest"
          }
        },
        "additionalProperties": false
      },
      "UpdateClinicRequest": {
        "required": [
          "address",
          "email",
          "name",
          "phone",
          "status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "address": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string"
          },
          "phone": {
            "minLength": 1,
            "type": "string",
            "format": "tel"
          },
          "status": {
            "$ref": "#/components/schemas/ClinicStatus"
          }
        },
        "additionalProperties": false
      },
      "UpdateConsultantProfile": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "specialty": {
            "type": "string",
            "nullable": true
          },
          "experience": {
            "type": "string",
            "nullable": true
          },
          "consultantPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "UpdateConsultantProfileBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/UpdateConsultantProfile"
          }
        },
        "additionalProperties": false
      },
      "UpdateCyclePredictionRequest": {
        "required": [
          "cyclePredictionID"
        ],
        "type": "object",
        "properties": {
          "cyclePredictionID": {
            "type": "integer",
            "format": "int32"
          },
          "menstrualCycleID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ovulationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-05-10T00:00:00"
          },
          "fertileStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-05-10T00:00:00"
          },
          "fertileEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-05-10T00:00:00"
          },
          "nextPeriodStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-05-10T00:00:00"
          }
        },
        "additionalProperties": false
      },
      "UpdateFeedBackRequest": {
        "required": [
          "facilityRate",
          "serviceRate"
        ],
        "type": "object",
        "properties": {
          "serviceRate": {
            "maximum": 5,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "facilityRate": {
            "maximum": 5,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "content": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateLabTestRequest": {
        "required": [
          "labTestID"
        ],
        "type": "object",
        "properties": {
          "labTestID": {
            "type": "integer",
            "format": "int32"
          },
          "customerID": {
            "type": "string",
            "nullable": true
          },
          "staffID": {
            "type": "string",
            "nullable": true
          },
          "treatmentID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "testName": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "result": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "referenceRange": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "unit": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isPositive": {
            "type": "boolean",
            "nullable": true
          },
          "testDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-05-10T00:00:00"
          }
        },
        "additionalProperties": false
      },
      "UpdateMenstrualCycleRequest": {
        "required": [
          "menstrualCycleID"
        ],
        "type": "object",
        "properties": {
          "menstrualCycleID": {
            "type": "integer",
            "format": "int32"
          },
          "customerID": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-05-10T00:00:00"
          },
          "periodLength": {
            "maximum": 15,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cycleLength": {
            "maximum": 45,
            "minimum": 15,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateServiceRequest": {
        "type": "object",
        "properties": {
          "servicesID": {
            "type": "integer",
            "format": "int32"
          },
          "servicesName": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "servicesPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "serviceType": {
            "$ref": "#/components/schemas/ServiceType"
          },
          "status": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateSlotRequest": {
        "type": "object",
        "properties": {
          "workingHourID": {
            "type": "integer",
            "format": "int32"
          },
          "maxConsultant": {
            "type": "integer",
            "format": "int32"
          },
          "maxTestAppointment": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-10T00:00:00"
          }
        },
        "additionalProperties": false
      },
      "UpdateTreatmentOutcomeRequest": {
        "required": [
          "treatmentID"
        ],
        "type": "object",
        "properties": {
          "treatmentID": {
            "type": "integer",
            "format": "int32"
          },
          "customerID": {
            "type": "string",
            "nullable": true
          },
          "consultantID": {
            "type": "string",
            "nullable": true
          },
          "appointmentID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "diagnosis": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "treatmentPlan": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "prescription": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "recommendation": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateWorkingHourRequest": {
        "required": [
          "closingTime",
          "openingTime",
          "shift"
        ],
        "type": "object",
        "properties": {
          "shift": {
            "$ref": "#/components/schemas/Shift"
          },
          "openingTime": {
            "minLength": 1,
            "pattern": "^\\d{2}:\\d{2}$",
            "type": "string"
          },
          "closingTime": {
            "minLength": 1,
            "pattern": "^\\d{2}:\\d{2}$",
            "type": "string"
          },
          "status": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "$ref": "#/components/schemas/DateOnly"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkingHour": {
        "type": "object",
        "properties": {
          "workingHourID": {
            "type": "integer",
            "format": "int32"
          },
          "clinicID": {
            "type": "integer",
            "format": "int32"
          },
          "clinic": {
            "$ref": "#/components/schemas/Clinic"
          },
          "dayInWeek": {
            "$ref": "#/components/schemas/DayInWeek"
          },
          "shift": {
            "$ref": "#/components/schemas/Shift"
          },
          "openingTime": {
            "$ref": "#/components/schemas/TimeOnly"
          },
          "closingTime": {
            "$ref": "#/components/schemas/TimeOnly"
          },
          "status": {
            "type": "boolean"
          },
          "slots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Slot"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkingHourBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "$ref": "#/components/schemas/WorkingHour"
          }
        },
        "additionalProperties": false
      },
      "WorkingHourResponse": {
        "type": "object",
        "properties": {
          "workingHourID": {
            "type": "integer",
            "format": "int32"
          },
          "dayInWeek": {
            "$ref": "#/components/schemas/DayInWeek"
          },
          "shift": {
            "$ref": "#/components/schemas/Shift"
          },
          "openingTime": {
            "$ref": "#/components/schemas/TimeOnly"
          },
          "closingTime": {
            "$ref": "#/components/schemas/TimeOnly"
          },
          "status": {
            "type": "boolean"
          },
          "slots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Slot"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkingHourResponseIEnumerableBaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodeEnum"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkingHourResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Please enter a valid token",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}